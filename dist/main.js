(()=>{const e="http://127.0.0.1:8082/src/data/",a=e+"lifetime_rankings.json",n=e+"lifetime_sets.json",t=e+"lifetime_games.json",s=e+"seasonal_rankings.json",o=e+"seasonal_sets.json",i=e+"seasonal_games.json",r=document.querySelectorAll("select"),l=document.getElementById("player_one"),d=document.getElementById("player_two"),c=document.getElementById("data"),p="Player One",f="Player Two";function g(e){return e.includes(" | ")&&(e=e.split(" | ").pop()),null==e&&(e=!1),e}function m(e){c.innerHTML=e}function u(e,a){delete e[a].field1,delete e[a].field2,delete e[a].field21,delete e[a].field22}!async function(){try{m("Attempting to pull data...");const e=await fetch(a),S=await fetch(n),h=await fetch(t),w=await fetch(s),$=await fetch(o),y=await fetch(i);if(!e.ok)throw new Error(`She's broke bahd! Response status: ${e.status}`);if(!S.ok)throw new Error(`She's broke bahd! Response status: ${S.status}`);if(!h.ok)throw new Error(`She's broke bahd! Response status: ${h.status}`);if(!w.ok)throw new Error(`She's broke bahd! Response status: ${w.status}`);if(!$.ok)throw new Error(`She's broke bahd! Response status: ${$.status}`);if(!y.ok)throw new Error(`She's broke bahd! Response status: ${y.status}`);m("Responses OK, pulling data...");const k=await e.json(),b=await S.json(),L=await h.json(),R=await w.json(),P=await $.json(),_=await y.json();m("Creating Head 2 Head JSON: Building Player structure...");let H={};for(const e in k){let a=k[e].Player,n="";if(a.includes(" | ")){let e=a.split(" | ");a=e[1],n=e[0]}H[a]={Characters:k[e].Characters,Country:k[e].Country,GameData:{Lifetime:{},Seasonal:{}},PlayerName:a,PowerRanking:{Lifetime:{Points:k[e].Points,Rank:k[e].Rank},Seasonal:{Points:"",Rank:""}},Tag:n,SetData:{Lifetime:{},Seasonal:{}}}}m("Creating Head 2 Head JSON: Seasonal Rankings...");for(const e in R){let a=R[e].Player,n=R[e].Points,t=R[e].Rank;a=g(a),H[a].PowerRanking.Seasonal.Points=n,H[a].PowerRanking.Seasonal.Rank=t}m("Data cleaning: Deleteing header arrays...");const D=b[0],I=L[0],C=P[0],M=_[0];delete b[0],delete L[0],delete P[0],delete _[0],m("Data cleaning: Lifetime Sets...");for(const e in b){let a=b[e].field2;null!=a&&(a=g(a),b[a]=b[e],delete b[e])}m("Data cleaning: Lifetime Games...");for(const e in L){let a=L[e].field2;null!=a&&(a=g(a),L[a]=L[e],delete L[e])}m("Data cleaning: Seasonal Sets...");for(const e in P){let a=P[e].field2;null!=a&&(a=g(a),P[a]=P[e],delete P[e])}m("Data cleaning: Seasonal Games...");for(const e in _){let a=_[e].field2;null!=a&&(a=g(a),_[a]=_[e],delete _[e])}m("Data cleaning: Key replacements for Lifetime Sets...");for(const e in b)for(const a in b[e]){let n=b[e][a],t=D[a];t=g(t),b[e][t]=n,delete b[e][a]}m("Data cleaning: Key replacements for Lifetime Games...");for(const e in L)for(const a in L[e]){let n=L[e][a],t=I[a];t=g(t),L[e][t]=n,delete L[e][a]}m("Data cleaning: Key replacements for Seasonal Sets...");for(const e in P)for(const a in P[e]){let n=P[e][a],t=C[a];t=g(t),P[e][t]=n,delete P[e][a]}m("Data cleaning: Key replacements for Seasonal Games...");for(const e in _)for(const a in _[e]){let n=_[e][a],t=M[a];t=g(t),_[e][t]=n,delete _[e][a]}m("Creating Head 2 Head JSON: Adding Lifetime Sets data...");for(const e in b)0==e?delete b[e]:(u(b,e),H[e].SetData.Lifetime=b[e]);m("Creating Head 2 Head JSON: Adding Seasonal Set data...");for(const e in P)0==e?delete P[e]:(u(P,e),H[e].SetData.Seasonal=P[e]);m("Creating Head 2 Head JSON: Adding Lifetime Game data...");for(const e in L)0==e?delete L[e]:(u(L,e),H[e].GameData.Lifetime=L[e]);m("Creating Head 2 Head JSON: Adding Seasonal Game data...");for(const e in _)0==e?delete _[e]:(u(_,e),H[e].GameData.Seasonal=_[e]);m("Head 2 Head JSON compiled, creating list of Players..."),l.innerHTML+=`<option>${p}</option>`,d.innerHTML+=`<option>${f}</option>`;for(const e in H){let a=H[e].PlayerName,n=H[e].Rank;l.innerHTML+=`<option value="${n}">${a}</option>`,d.innerHTML+=`<option value="${n}">${a}</option>`}m("Finishing up..."),r.forEach((e=>{e.addEventListener("change",(function(){if(a=d,(e=l).options[e.selectedIndex].value!=p&&a.options[a.selectedIndex].value!=f){let e=l.options[l.selectedIndex].innerText,a=d.options[d.selectedIndex].innerText,n=H[e].Tag,t=H[a].Tag,s=H[e].PowerRanking.Lifetime.Rank,o=H[e].PowerRanking.Lifetime.Points,i=H[e].PowerRanking.Seasonal.Rank,r=H[e].PowerRanking.Seasonal.Points,p=H[e].Characters.split(" - "),f=p[0]+"-00-full.png",g=p[1]+"-00-full.png",m=H[e].SetData.Lifetime[a],u=H[e].SetData.Seasonal[a],S=H[e].GameData.Lifetime[a],h=H[e].GameData.Seasonal[a],w=m.split(" -- "),$=S.split(" -- "),y=u.split(" -- "),k=h.split(" -- "),b=parseInt(w[0])/(parseInt(w[0])+parseInt(w[1]))*100,L=parseInt($[0])/(parseInt($[0])+parseInt($[1]))*100,R=parseInt(y[0])/(parseInt(y[0])+parseInt(y[1]))*100,P=parseInt(k[0])/(parseInt(k[0])+parseInt(k[1]))*100,_=H[a].PowerRanking.Lifetime.Rank,D=H[a].PowerRanking.Lifetime.Points,I=H[a].PowerRanking.Seasonal.Rank,C=H[a].PowerRanking.Seasonal.Points,M=H[a].Characters.split(" - "),G=M[0]+"-00-full.png",j=M[1]+"-00-full.png";f=f.replace(" ","-").toLocaleLowerCase(),g=g.replace(" ","-").toLocaleLowerCase(),G=G.replace(" ","-").toLowerCase(),j=j.replace(" ","-").toLowerCase(),c.innerHTML=`\n                    <article class="player-stats">\n                        <p>\n                            <img class="player-stats__player_main" src="./public/images/fighters/${f}">\n                            <span class="player-stats__player_name"><span class="player-stats__player-tag">${n}</span>${e}</span>\n                            <br>\n                            ${f} / ${g}\n                            <br>\n                            Lifetime PR - #${s} (${o})\n                            <br>\n                            Seasonal PR - #${i} (${r})\n                        </p>\n                        <p>\n                            Lifetime Sets:\n                            <br>\n                            ${m}\n                            <br>\n                            ${Math.round(b)}% | ${Math.round(100-b)}%\n                            <br>\n                            <br>\n                            Lifetime Games:\n                            <br>\n                            ${S}\n                            <br>\n                            ${Math.round(L)}% | ${Math.round(100-L)}%\n                            <br>\n                            <br>\n                            <br>\n                            Seasonal Sets:\n                            <br>\n                            ${u}\n                            <br>\n                            ${Math.round(R)}% | ${Math.round(100-R)}%\n                            <br>\n                            <br>\n                            Seasonal Games:\n                            <br>\n                            ${h}\n                            <br>\n                            ${Math.round(P)}% | ${Math.round(100-P)}%\n                        </p>\n                        <p>\n                            <img class="player-stats__player_main" src="./public/images/fighters/${G}">\n                            <span class="player-stats__player_name"><span class="player-stats__player-tag">${t}</span>${a}</span>\n                            <br>\n                            ${G} / ${j}\n                            <br>\n                            Lifetime PR - #${_} (${D})\n                            <br>\n                            Seasonal PR - #${I} (${C})\n                        </p>\n                    </article>\n                    `}var e,a}))})),m("Ready! Awaiting player selection."),console.group("Head 2 Head"),console.log(H),console.groupEnd()}catch(e){console.error(e.message)}}()})();