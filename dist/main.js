(()=>{const e="http://127.0.0.1:8082/src/data/",n=e+"all_time_sets.json",t=e+"all_time_games.json",a=e+"season_to_date_sets.json",o=e+"season_to_date_games.json",s=e+"all_time_rankings.json",l=document.querySelectorAll("select"),i=document.getElementById("player_one"),r=document.getElementById("player_two"),d=document.getElementById("data"),c="Player One",f="Player Two";function p(e){return e.includes(" | ")&&(e=e.split(" | ").pop()),null==e&&(e=!1),e}function g(e){d.innerHTML=e,console.log(e)}function S(e,n){delete e[n].field1,delete e[n].field2,delete e[n].field21,delete e[n].field22}!async function(){try{g("Attempting to pull data...");const e=await fetch(n),u=await fetch(t),m=await fetch(a),h=await fetch(o),w=await fetch(s);if(!e.ok)throw new Error(`She's broke bahd! Response status: ${e.status}`);if(!u.ok)throw new Error(`She's broke bahd! Response status: ${u.status}`);if(!m.ok)throw new Error(`She's broke bahd! Response status: ${m.status}`);if(!h.ok)throw new Error(`She's broke bahd! Response status: ${h.status}`);if(!w.ok)throw new Error(`She's broke bahd! Response status: ${w.status}`);g("Responses OK, pulling data...");const y=await e.json(),$=await u.json(),b=await m.json(),k=await h.json(),H=await w.json();g("Creating Head 2 Head JSON: Adding players...");let L={};for(const e in H){let n=H[e].Player,t="";if(n.includes(" | ")){let e=n.split(" | ");n=e[1],t=e[0]}L[n]={Characters:H[e].Characters,Country:H[e].Country,GameData:{Lifetime:{},Seasonal:{}},Points:H[e].Points,PlayerName:n,Rank:H[e].Rank,Tag:t,SetData:{Lifetime:{},Seasonal:{}}}}g("Cleaning the data...");const R=y[0],T=$[0],C=b[0],D=k[0];delete y[0],delete $[0],delete b[0],delete k[0],g("Cleaning ATS...");for(const e in y){let n=y[e].field2;null!=n&&(n=p(n),y[n]=y[e],delete y[e])}g("Cleaning ATG...");for(const e in $){let n=$[e].field2;null!=n&&(n=p(n),$[n]=$[e],delete $[e])}g("Cleaning STDS...");for(const e in b){let n=b[e].field2;null!=n&&(n=p(n),b[n]=b[e],delete b[e])}g("Cleaning STDG...");for(const e in k){let n=k[e].field2;null!=n&&(n=p(n),k[n]=k[e],delete k[e])}g("Replacing keys for ATS...");for(const e in y)for(const n in y[e]){let t=y[e][n],a=R[n];a=p(a),y[e][a]=t,delete y[e][n]}g("Replacing keys for ATG...");for(const e in $)for(const n in $[e]){let t=$[e][n],a=T[n];a=p(a),$[e][a]=t,delete $[e][n]}g("Replacing keys for STDS...");for(const e in b)for(const n in b[e]){let t=b[e][n],a=C[n];a=p(a),b[e][a]=t,delete b[e][n]}g("Replacing keys for STDG...");for(const e in k)for(const n in k[e]){let t=k[e][n],a=D[n];a=p(a),k[e][a]=t,delete k[e][n]}console.group("cleaned data"),console.log(y),console.log($),console.log(b),console.log(k),console.groupEnd(),g("Creating Head 2 Head JSON: Adding Lifetime Sets data...");for(const e in y)0==e?delete y[e]:(S(y,e),L[e].SetData.Lifetime=y[e]);g("Creating Head 2 Head JSON: Adding Seasonal Set data...");for(const e in b)0==e?delete b[e]:(S(b,e),L[e].SetData.Seasonal=b[e]);g("Creating Head 2 Head JSON: Adding Lifetime Game data...");for(const e in $)0==e?delete $[e]:(S($,e),L[e].GameData.Lifetime=$[e]);g("Creating Head 2 Head JSON: Adding Seasonal Game data...");for(const e in k)0==e?delete k[e]:(S(k,e),L[e].GameData.Seasonal=k[e]);g("Head 2 Head JSON compiled, creating option elements..."),console.group("Head 2 Head JSON"),console.log(L),console.groupEnd(),i.innerHTML+=`<option>${c}</option>`,r.innerHTML+=`<option>${f}</option>`;for(const e in L){let n=L[e].PlayerName,t=L[e].Rank;i.innerHTML+=`<option value="${t}">${n}</option>`,r.innerHTML+=`<option value="${t}">${n}</option>`}g("Finishing up..."),l.forEach((e=>{e.addEventListener("change",(function(){if(n=r,(e=i).options[e.selectedIndex].value!=c&&n.options[n.selectedIndex].value!=f){let e=i.options[i.selectedIndex].innerText,n=r.options[r.selectedIndex].innerText;console.log(L[e]);let t=L[e].Rank,a=L[e].Characters,o=L[e].SetData.Lifetime[n],s=L[e].SetData.Seasonal[n],l=L[e].GameData.Lifetime[n],c=L[e].GameData.Seasonal[n],f=L[n].Rank,p=L[n].Characters;d.innerHTML=`\n                    <article class="player-stats">\n                        <p>\n                            P1: ${e} (${a})\n                            <br>\n                            PR #${t}\n                            <br>\n                            <br>\n                            Lifetime Stats\n                            <br>\n                            Lifetime Sets: ${o}\n                            <br>\n                            Lifetime Games: ${l}\n                            <br>\n                            <br>\n                            Seasonal Stats\n                            <br>\n                            Seasonal Sets: ${s}\n                            <br>\n                            Seasonal Games: ${c}\n                        </p>\n                        <p>VS</p>\n                        <p>\n                            P1: ${n} (${p})\n                            <br>\n                            PR #${f}\n                        </p>\n                    </article>\n                    `}var e,n}))})),g("Ready! Awaiting player selection.")}catch(e){console.error(e.message)}}()})();