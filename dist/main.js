(()=>{const e="http://127.0.0.1:8082/src/data/",t=e+"lifetime_rankings.json",n=e+"lifetime_sets.json",a=e+"lifetime_games.json",o=e+"seasonal_rankings.json",s=e+"seasonal_sets.json",l=e+"seasonal_games.json",i=document.getElementById("player-selection__submit"),r=document.getElementById("player_one"),d=document.getElementById("player_two"),c=document.getElementById("data_output"),m=(document.getElementById("progress-log"),document.getElementById("error_messages")),p="Player One",g="Player Two",u="Y-Town Smash",y="./public/images/fighters/",f="-00-full.png",_=" -- ";function h(e){return e.includes(" | ")&&(e=e.split(" | ").pop()),null==e&&(e=!1),e}function w(e){console.log(e)}function S(e,t){delete e[t].field1,delete e[t].field2,delete e[t].field21,delete e[t].field22}function E(e){let t="",n=`<span class="tag_highlight">${e}</span>`;for(let a=0;a<12;a++)t+=a%2==0?(n+"&nbsp;"+e+"&nbsp;").repeat(6)+e+"&nbsp;":(e+"&nbsp;"+n+"&nbsp;").repeat(6)+e+"&nbsp;";return t}!async function(){try{w("Attempting to pull data...");const e=await fetch(t),T=await fetch(n),I=await fetch(a),k=await fetch(o),B=await fetch(s),x=await fetch(l);if(!e.ok)throw new Error(`She's broke bahd! Response status: ${e.status}`);if(!T.ok)throw new Error(`She's broke bahd! Response status: ${T.status}`);if(!I.ok)throw new Error(`She's broke bahd! Response status: ${I.status}`);if(!k.ok)throw new Error(`She's broke bahd! Response status: ${k.status}`);if(!B.ok)throw new Error(`She's broke bahd! Response status: ${B.status}`);if(!x.ok)throw new Error(`She's broke bahd! Response status: ${x.status}`);w("Responses OK, pulling data...");const H=await e.json(),L=await T.json(),$=await I.json(),R=await k.json(),P=await B.json(),b=await x.json();w("Creating Head 2 Head JSON: Building Player structure...");let D={};for(const e in H){let t=H[e].Player,n="";if(t.includes(" | ")){let e=t.split(" | ");t=e[1],n=e[0]}D[t]={Characters:H[e].Characters,Country:H[e].Country,GameData:{Lifetime:{},Seasonal:{}},PlayerName:t,PowerRanking:{Lifetime:{Points:H[e].Points,Rank:H[e].Rank},Seasonal:{Points:"",Rank:""}},Tag:n,SetData:{Lifetime:{},Seasonal:{}}}}w("Creating Head 2 Head JSON: Seasonal Rankings...");for(const e in R){let t=R[e].Player,n=R[e].Points,a=R[e].Rank;t=h(t),D[t].PowerRanking.Seasonal.Points=n,D[t].PowerRanking.Seasonal.Rank=a}w("Data cleaning: Deleteing header arrays...");const C=L[0],M=$[0],j=P[0],G=b[0];delete L[0],delete $[0],delete P[0],delete b[0],w("Data cleaning: Lifetime Sets...");for(const e in L){let t=L[e].field2;null!=t&&(t=h(t),L[t]=L[e],delete L[e])}w("Data cleaning: Lifetime Games...");for(const e in $){let t=$[e].field2;null!=t&&(t=h(t),$[t]=$[e],delete $[e])}w("Data cleaning: Seasonal Sets...");for(const e in P){let t=P[e].field2;null!=t&&(t=h(t),P[t]=P[e],delete P[e])}w("Data cleaning: Seasonal Games...");for(const e in b){let t=b[e].field2;null!=t&&(t=h(t),b[t]=b[e],delete b[e])}w("Data cleaning: Key replacements for Lifetime Sets...");for(const e in L)for(const t in L[e]){let n=L[e][t],a=C[t];a=h(a),L[e][a]=n,delete L[e][t]}w("Data cleaning: Key replacements for Lifetime Games...");for(const e in $)for(const t in $[e]){let n=$[e][t],a=M[t];a=h(a),$[e][a]=n,delete $[e][t]}w("Data cleaning: Key replacements for Seasonal Sets...");for(const e in P)for(const t in P[e]){let n=P[e][t],a=j[t];a=h(a),P[e][a]=n,delete P[e][t]}w("Data cleaning: Key replacements for Seasonal Games...");for(const e in b)for(const t in b[e]){let n=b[e][t],a=G[t];a=h(a),b[e][a]=n,delete b[e][t]}w("Creating Head 2 Head JSON: Adding Lifetime Sets data...");for(const e in L)0==e?delete L[e]:(S(L,e),D[e].SetData.Lifetime=L[e]);w("Creating Head 2 Head JSON: Adding Seasonal Set data...");for(const e in P)0==e?delete P[e]:(S(P,e),D[e].SetData.Seasonal=P[e]);w("Creating Head 2 Head JSON: Adding Lifetime Game data...");for(const e in $)0==e?delete $[e]:(S($,e),D[e].GameData.Lifetime=$[e]);w("Creating Head 2 Head JSON: Adding Seasonal Game data...");for(const e in b)0==e?delete b[e]:(S(b,e),D[e].GameData.Seasonal=b[e]);w("Head 2 Head JSON compiled, creating list of Players..."),r.innerHTML+=`<option>${p}</option>`,d.innerHTML+=`<option>${g}</option>`;for(const e in D){let t=D[e].PlayerName,n=D[e].Rank;r.innerHTML+=`<option value="${n}">${t}</option>`,d.innerHTML+=`<option value="${n}">${t}</option>`}w("Finishing up..."),i.addEventListener("click",(function(){if(function(e,t,n){return e.value!=p&&t.value!==g?(n.innerHTML="",n.style.display="none",!0):(n.innerHTML="<p>Please select two players!</p>",n.style.display="flex",!1)}(r,d,m)){window.scrollTo({top:document.body.scrollHeight,left:0,behavior:"smooth"});let e=r.options[r.selectedIndex].innerText,t=d.options[d.selectedIndex].innerText,n=D[e].Tag,a=D[t].Tag,o=D[e].Characters.split(" - "),s=y+o[0]+f,l=y+o[1]+f,i=D[t].Characters.split(" - "),p=y+i[0]+f,g=y+i[1]+f,h=D[e].PowerRanking.Seasonal.Rank,w=D[e].PowerRanking.Seasonal.Points,S=D[t].PowerRanking.Seasonal.Rank,T=D[t].PowerRanking.Seasonal.Points,I=D[e].SetData.Seasonal[t],k=D[e].GameData.Seasonal[t],B=D[e].SetData.Lifetime[t],x=D[e].GameData.Lifetime[t];if(null!=I&&"0 -- 0"!=I){let o=I.split(_),i=k.split(_),r=B.split(_),d=x.split(_),m=r[0],y=d[0],f=o[0],H=i[0],L=r[1],$=d[1],R=o[1],P=i[1],b=parseInt(o[0]),D=parseInt(o[1]),C=parseInt(i[0]),M=parseInt(i[1]),j=Math.round(b/(b+D)*100),G=(Math.round(C/(C+M)*100),parseInt(r[0])),A=parseInt(r[1]),N=parseInt(d[0]),O=parseInt(d[1]),v=100-j;Math.round(G/(G+A)*100),Math.round(N/(N+O)*100),s=s.replace(" ","-").toLowerCase(),l=l.replace(" ","-").toLowerCase(),p=p.replace(" ","-").toLowerCase(),g=g.replace(" ","-").toLowerCase();const J=document.getElementById("player_one_character"),K=document.getElementById("player_two_character"),q=document.getElementById("player_one_name"),F=document.getElementById("player_two_name"),W=document.getElementById("player_one_tag"),Y=document.getElementById("player_two_tag"),z=document.getElementById("player_one_pr"),Q=document.getElementById("player_two_pr"),U=document.getElementById("player_one_seasonal_points"),V=document.getElementById("player_two_seasonal_points"),X=document.getElementById("head_to_head_title"),Z=document.getElementById("stats_title"),ee=document.querySelectorAll(".win_percent_title"),te=document.querySelectorAll(".pr_title"),ne=document.querySelectorAll(".sets"),ae=document.querySelectorAll(".games"),oe=document.getElementById("lifetime_title"),se=document.getElementById("player_one_lifetime_sets"),le=document.getElementById("player_two_lifetime_sets"),ie=document.getElementById("player_one_lifetime_games"),re=document.getElementById("player_two_lifetime_games"),de=document.getElementById("seasonal_title"),ce=document.getElementById("player_one_seasonal_sets_ratio"),me=document.getElementById("player_two_seasonal_sets_ratio"),pe=document.getElementById("player_one_seasonal_sets_count"),ge=document.getElementById("player_two_seasonal_sets_count"),ue=document.getElementById("player_one_seasonal_games"),ye=document.getElementById("player_two_seasonal_games"),fe=document.getElementById("main_logo");c.style.display="flex",fe.style.display="block",J.src=s,K.src=p,""==n&&(n=u),""==a&&(a=u),W.innerHTML=E(n),Y.innerHTML=E(a),q.innerText=e,F.innerText=t,z.innerText=`#${h}`,Q.innerText=`#${S}`,U.innerText=`${w}`,V.innerText=`${T}`,X.innerText="Head to Head",Z.innerText="Stats",ee.forEach((e=>{e.innerText="Win %"})),te.forEach((e=>{e.innerText="PR"})),ne.forEach((e=>{e.innerText="Sets"})),ae.forEach((e=>{e.innerText="Games"})),de.innerText="Seasonal",ce.innerText=`${j}%`,me.innerText=`${v}%`,pe.innerText=`${f}`,ge.innerText=`${R}`,ue.innerText=`${H}`,ye.innerText=`${P}`,oe.innerText="Lifetime",se.innerText=`${m}`,le.innerText=`${L}`,ie.innerText=`${y}`,re.innerText=`${$}`}else m.innerHTML="<p>These players have not played a set this season!</p>",console.log("These players have not played a set this season!")}})),w("Ready! Awaiting player selection."),console.group("Head 2 Head"),console.log(D),console.groupEnd()}catch(e){console.error(e.message)}}()})();