(()=>{function e(e){return e.includes(" | ")&&(e=e.split(" | ").pop()),e}!async function(){const o="http://127.0.0.1:8082/src/data/",t=o+"all_time_sets.json",s=o+"all_time_games.json",n=o+"season_to_date_sets.json",a=o+"season_to_date_games.json",l=o+"all_time_rankings.json",r=document.querySelectorAll("select"),i=document.getElementById("player_one"),c=document.getElementById("player_two"),p=document.getElementById("data");try{p.innerHTML="Attempting to pull data...",console.log("Attempting to pull data...");const o=await fetch(t),d=await fetch(s),g=await fetch(n),_=await fetch(a),f=await fetch(l);if(!o.ok)throw new Error(`She's broke bahd! Response status: ${o.status}`);if(!d.ok)throw new Error(`She's broke bahd! Response status: ${d.status}`);if(!g.ok)throw new Error(`She's broke bahd! Response status: ${g.status}`);if(!_.ok)throw new Error(`She's broke bahd! Response status: ${_.status}`);if(!f.ok)throw new Error(`She's broke bahd! Response status: ${f.status}`);p.innerHTML="Responses OK, pulling data...",console.log("Responses OK, pulling data...");const u=await o.json(),m=await d.json(),y=await g.json(),h=await _.json(),w=await f.json();p.innerHTML="Storing data for use...",console.log("Storing data for use...");const $=u,k=m,E=y,S=h,L=w;i.innerHTML+="<option>Player One</option>",c.innerHTML+="<option>Player Two</option>",p.innerHTML="Creating list of players...",console.log("Creating list of players...");for(const e in w){let o=w[e].Player,t=w[e].Rank;w[e].Player.includes(" | ")&&(o=w[e].Player.split(" | "),o=o[1]),i.innerHTML+=`<option value="${t}">${o}</option>`,c.innerHTML+=`<option value="${t}">${o}</option>`}for(const o in $)$[`${e($[o].field2)}`]=$[o],delete $[o];for(const o in k)k[`${e(k[o].field2)}`]=k[o],delete k[o];for(const o in E)E[`${e(E[o].field2)}`]=E[o],delete E[o];for(const o in S)S[`${e(S[o].field2)}`]=S[o],delete S[o];delete $[""],delete k[""],delete E[""],delete S[""],console.group("DEBUGGING:"),console.log("--------------------------------"),console.log("lifetime_set_data: "),console.log($),console.log("lifetime_game_data: "),console.log(k),console.log("seasonal_set_data: "),console.log(E),console.log("seasonal_game_data: "),console.log(S),console.log("lifetime_rankings_data: "),console.log(L),console.groupEnd("--------------------------------");for(const e in L){let o=L[e].Player;for(const e in $)$[e]==o&&(L.Sets.Lifetime=$[e]);for(const e in k)k[e]==o&&(L.Games.Lifetime=L[e]);for(const e in E)E[e]==o&&(L.Sets.Seasonal=E[e]);for(const e in S)S[e]==o&&(L.Games.Seasonal=S[e])}console.group("DEBUGGING AGAIN:"),console.log("--------------------------------"),console.log("lifetime_rankings_data: "),console.log(L),console.groupEnd("--------------------------------"),r.forEach((e=>{e.addEventListener("change",(function(){let e=i.options[i.selectedIndex].innerText,o=c.options[c.selectedIndex].innerText,t=i.options[i.selectedIndex].value,s=c.options[c.selectedIndex].value;p.innerHTML=`\n                <article class="player-stats">\n                    <p class="player-stats__player_character">${t}</p>\n                    <p class="player-stats__player_character">${s}</p>\n                </article>\n                <article class="player-stats">\n                    <p class="player-stats__player_name">${e}</p>\n                    <p class="player-stats__versus">VS</p>\n                    <p class="player-stats__player_name">${o}</p>\n                </article>\n                `}))}))}catch(e){console.error(e.message)}}()})();