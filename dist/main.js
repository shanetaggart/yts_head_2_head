(()=>{const e="http://127.0.0.1:8082/src/data/",t=e+"lifetime_rankings.json",a=e+"lifetime_sets.json",n=e+"lifetime_games.json",o=e+"seasonal_rankings.json",s=e+"seasonal_sets.json",l=e+"seasonal_games.json",i=document.getElementById("player-selection__submit"),r=document.getElementById("player_one"),d=document.getElementById("player_two"),p=(document.getElementById("data"),document.getElementById("progress-log"),"Player One"),c="Player Two";function m(e){return e.includes(" | ")&&(e=e.split(" | ").pop()),null==e&&(e=!1),e}function g(e){console.log(e)}function _(e,t){delete e[t].field1,delete e[t].field2,delete e[t].field21,delete e[t].field22}!async function(){try{g("Attempting to pull data...");const e=await fetch(t),f=await fetch(a),y=await fetch(n),u=await fetch(o),w=await fetch(s),h=await fetch(l);if(!e.ok)throw new Error(`She's broke bahd! Response status: ${e.status}`);if(!f.ok)throw new Error(`She's broke bahd! Response status: ${f.status}`);if(!y.ok)throw new Error(`She's broke bahd! Response status: ${y.status}`);if(!u.ok)throw new Error(`She's broke bahd! Response status: ${u.status}`);if(!w.ok)throw new Error(`She's broke bahd! Response status: ${w.status}`);if(!h.ok)throw new Error(`She's broke bahd! Response status: ${h.status}`);g("Responses OK, pulling data...");const S=await e.json(),L=await f.json(),k=await y.json(),I=await u.json(),E=await w.json(),H=await h.json();g("Creating Head 2 Head JSON: Building Player structure...");let R={};for(const e in S){let t=S[e].Player,a="";if(t.includes(" | ")){let e=t.split(" | ");t=e[1],a=e[0]}R[t]={Characters:S[e].Characters,Country:S[e].Country,GameData:{Lifetime:{},Seasonal:{}},PlayerName:t,PowerRanking:{Lifetime:{Points:S[e].Points,Rank:S[e].Rank},Seasonal:{Points:"",Rank:""}},Tag:a,SetData:{Lifetime:{},Seasonal:{}}}}g("Creating Head 2 Head JSON: Seasonal Rankings...");for(const e in I){let t=I[e].Player,a=I[e].Points,n=I[e].Rank;t=m(t),R[t].PowerRanking.Seasonal.Points=a,R[t].PowerRanking.Seasonal.Rank=n}g("Data cleaning: Deleteing header arrays...");const P=L[0],B=k[0],$=E[0],D=H[0];delete L[0],delete k[0],delete E[0],delete H[0],g("Data cleaning: Lifetime Sets...");for(const e in L){let t=L[e].field2;null!=t&&(t=m(t),L[t]=L[e],delete L[e])}g("Data cleaning: Lifetime Games...");for(const e in k){let t=k[e].field2;null!=t&&(t=m(t),k[t]=k[e],delete k[e])}g("Data cleaning: Seasonal Sets...");for(const e in E){let t=E[e].field2;null!=t&&(t=m(t),E[t]=E[e],delete E[e])}g("Data cleaning: Seasonal Games...");for(const e in H){let t=H[e].field2;null!=t&&(t=m(t),H[t]=H[e],delete H[e])}g("Data cleaning: Key replacements for Lifetime Sets...");for(const e in L)for(const t in L[e]){let a=L[e][t],n=P[t];n=m(n),L[e][n]=a,delete L[e][t]}g("Data cleaning: Key replacements for Lifetime Games...");for(const e in k)for(const t in k[e]){let a=k[e][t],n=B[t];n=m(n),k[e][n]=a,delete k[e][t]}g("Data cleaning: Key replacements for Seasonal Sets...");for(const e in E)for(const t in E[e]){let a=E[e][t],n=$[t];n=m(n),E[e][n]=a,delete E[e][t]}g("Data cleaning: Key replacements for Seasonal Games...");for(const e in H)for(const t in H[e]){let a=H[e][t],n=D[t];n=m(n),H[e][n]=a,delete H[e][t]}g("Creating Head 2 Head JSON: Adding Lifetime Sets data...");for(const e in L)0==e?delete L[e]:(_(L,e),R[e].SetData.Lifetime=L[e]);g("Creating Head 2 Head JSON: Adding Seasonal Set data...");for(const e in E)0==e?delete E[e]:(_(E,e),R[e].SetData.Seasonal=E[e]);g("Creating Head 2 Head JSON: Adding Lifetime Game data...");for(const e in k)0==e?delete k[e]:(_(k,e),R[e].GameData.Lifetime=k[e]);g("Creating Head 2 Head JSON: Adding Seasonal Game data...");for(const e in H)0==e?delete H[e]:(_(H,e),R[e].GameData.Seasonal=H[e]);g("Head 2 Head JSON compiled, creating list of Players..."),r.innerHTML+=`<option>${p}</option>`,d.innerHTML+=`<option>${c}</option>`;for(const e in R){let t=R[e].PlayerName,a=R[e].Rank;r.innerHTML+=`<option value="${a}">${t}</option>`,d.innerHTML+=`<option value="${a}">${t}</option>`}g("Finishing up..."),i.addEventListener("click",(function(){if(e=d,r.value!=p&&e.value!==c){let e=r.options[r.selectedIndex].innerText,t=d.options[d.selectedIndex].innerText,a=R[e].Tag,n=R[t].Tag,o=(R[e].PowerRanking.Lifetime.Rank,R[e].PowerRanking.Lifetime.Points),s=R[e].PowerRanking.Seasonal.Rank,l=R[e].PowerRanking.Seasonal.Points,i=R[e].Characters.split(" - "),p=i[0]+"-00-full.png",c=i[1]+"-00-full.png",m=R[e].SetData.Lifetime[t],g=R[e].SetData.Seasonal[t],_=R[e].GameData.Lifetime[t],f=R[e].GameData.Seasonal[t],y=m.split(" -- "),u=_.split(" -- "),w=g.split(" -- "),h=f.split(" -- "),S=parseInt(y[0])/(parseInt(y[0])+parseInt(y[1]))*100,L=(parseInt(u[0]),parseInt(u[0]),parseInt(u[1]),parseInt(w[0]),parseInt(w[0]),parseInt(w[1]),parseInt(h[0]),parseInt(h[0]),parseInt(h[1]),R[t].PowerRanking.Lifetime.Rank,R[t].PowerRanking.Lifetime.Points),k=R[t].PowerRanking.Seasonal.Rank,I=R[t].PowerRanking.Seasonal.Points,E=R[t].Characters.split(" - "),H=E[0]+"-00-full.png",P=E[1]+"-00-full.png";p=p.replace(" ","-").toLocaleLowerCase(),c=c.replace(" ","-").toLocaleLowerCase(),H=H.replace(" ","-").toLowerCase(),P=P.replace(" ","-").toLowerCase();const B=document.getElementById("player_one_character"),$=document.getElementById("player_two_character"),D=document.getElementById("player_one_name"),T=document.getElementById("player_two_name"),C=document.getElementById("player_one_tag"),b=document.getElementById("player_two_tag"),M=document.getElementById("player_one_pr"),j=document.getElementById("player_two_pr"),G=document.getElementById("player_one_points"),N=document.getElementById("player_two_points"),O=document.getElementById("player_one_lifetime_sets"),J=document.getElementById("player_two_lifetime_sets");document.getElementById("player_one_lifetime_games"),document.getElementById("player_two_lifetime_games"),document.getElementById("player_one_seasonal_sets"),document.getElementById("player_two_seasonal_sets"),document.getElementById("player_one_seasonal_games"),document.getElementById("player_two_seasonal_games"),console.log(`testing: ${m}`),B.src=p,$.src=H,C.innerHTML=`<span id="player_one_tag" class="head-2-head__player--tag">${a}</span>`,b.innerHTML=`<span id="player_two_tag" class="head-2-head__player--tag">${n}</span>`,D.innerHTML,T.innerHTML,M.innerHTML=`<p id="player_one_pr" class="head-2-head__player--pr">${s}</p>`,j.innerHTML=`<p id="player_two_pr" class="head-2-head__player--pr">${k}</p>`,G.innerHTML=`<p id="player_one_points" class="head-2-head__player--points">Seasonal: ${l} pts<br>Lifetime: ${o} pts</p>`,N.innerHTML=`<p id="player_two_points" class="head-2-head__player--points">Seasonal: ${I} pts<br>Lifetime: ${L} pts</p>`,O.innerHTML=`<p id="player_one_lifetime_sets" class="detail-player-one-stat">${S}%</p>`,J.innerHTML=`<p id="player_two_lifetime_sets" class="detail-player-two-stat">${player_two_lifetime_set_ratio}</p>`}var e})),g("Ready! Awaiting player selection."),console.group("Head 2 Head"),console.log(R),console.groupEnd()}catch(e){console.error(e.message)}}()})();