(()=>{function e(e){return e.includes(" | ")&&(e=e.split(" | ").pop()),e}function t(e,t,o){return e.filter((function(e){return e[t]===o}))}!async function(){const o="http://127.0.0.1:8082/src/data/",s=o+"all_time_sets.json",n=o+"all_time_games.json",a=o+"season_to_date_sets.json",l=o+"season_to_date_games.json",r=o+"all_time_rankings.json",i=document.querySelectorAll("select"),c=document.getElementById("player_one"),p=document.getElementById("player_two"),d=document.getElementById("data");try{d.innerHTML="Attempting to pull data...",console.log("Attempting to pull data...");const o=await fetch(s),u=await fetch(n),_=await fetch(a),f=await fetch(l),g=await fetch(r);if(!o.ok)throw new Error(`She's broke bahd! Response status: ${o.status}`);if(!u.ok)throw new Error(`She's broke bahd! Response status: ${u.status}`);if(!_.ok)throw new Error(`She's broke bahd! Response status: ${_.status}`);if(!f.ok)throw new Error(`She's broke bahd! Response status: ${f.status}`);if(!g.ok)throw new Error(`She's broke bahd! Response status: ${g.status}`);d.innerHTML="Responses OK, pulling data...",console.log("Responses OK, pulling data...");const y=await o.json(),h=await u.json(),m=await _.json(),w=await f.json(),$=await g.json();d.innerHTML="Storing data for use...",console.log("Storing data for use...");const k=y,T=h,E=m,L=w,S=$;c.innerHTML+="<option>Player One</option>",p.innerHTML+="<option>Player Two</option>",d.innerHTML="Creating list of players...",console.log("Creating list of players...");for(const e in $){let t=$[e].Player,o=$[e].Rank;$[e].Player.includes(" | ")&&(t=$[e].Player.split(" | "),t=t[1]),c.innerHTML+=`<option value="${o}">${t}</option>`,p.innerHTML+=`<option value="${o}">${t}</option>`}for(const t in k)k[`${e(k[t].field2)}`]=k[t],delete k[t];for(const t in T)T[`${e(T[t].field2)}`]=T[t],delete T[t];for(const t in E)E[`${e(E[t].field2)}`]=E[t],delete E[t];for(const t in L)L[`${e(L[t].field2)}`]=L[t],delete L[t];delete k[""],delete T[""],delete E[""],delete L[""],console.group("DEBUGGING:"),console.log("--------------------------------"),console.log("lifetime_set_data: "),console.log(k),console.log("lifetime_game_data: "),console.log(T),console.log("seasonal_set_data: "),console.log(E),console.log("seasonal_game_data: "),console.log(L),console.log("lifetime_rankings_data: "),console.log(S),console.groupEnd("--------------------------------");for(const e in S){let o=t(k,"field2",S[e].Player);S[e].Sets={Lifetime:o,Seasonal:{Test:"0-0"}}}i.forEach((e=>{e.addEventListener("change",(function(){let e=c.options[c.selectedIndex].innerText,t=p.options[p.selectedIndex].innerText,o=c.options[c.selectedIndex].value,s=p.options[p.selectedIndex].value;d.innerHTML=`\n                <article class="player-stats">\n                    <p class="player-stats__player_character">${o}</p>\n                    <p class="player-stats__player_character">${s}</p>\n                </article>\n                <article class="player-stats">\n                    <p class="player-stats__player_name">${e}</p>\n                    <p class="player-stats__versus">VS</p>\n                    <p class="player-stats__player_name">${t}</p>\n                </article>\n                `}))}))}catch(e){console.error(e.message)}}()})();