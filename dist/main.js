(()=>{function e(e){return e.includes(" | ")&&(e=e.split(" | ").pop()),e}!async function(){const n="http://127.0.0.1:8082/src/data/",t=n+"all_time_sets.json",s=n+"all_time_games.json",o=n+"season_to_date_sets.json",a=n+"season_to_date_games.json",r=n+"all_time_rankings.json",i=document.querySelectorAll("select"),l=document.getElementById("player_one"),d=document.getElementById("player_two"),c=document.getElementById("data");try{const n=await fetch(t),f=await fetch(s),p=await fetch(o),m=await fetch(a),_=await fetch(r);if(!n.ok)throw new Error(`She's broke bahd! Response status: ${n.status}`);if(!f.ok)throw new Error(`She's broke bahd! Response status: ${f.status}`);if(!p.ok)throw new Error(`She's broke bahd! Response status: ${p.status}`);if(!m.ok)throw new Error(`She's broke bahd! Response status: ${m.status}`);if(!_.ok)throw new Error(`She's broke bahd! Response status: ${_.status}`);const S=await n.json(),u=await f.json(),h=await p.json(),b=await m.json(),y=await _.json(),w=S,$=u,L=h,g=b,k=y;l.innerHTML+="<option>Player One</option>",d.innerHTML+="<option>Player Two</option>";for(const e in y){let n=y[e].Player,t=y[e].Rank;y[e].Player.includes(" | ")&&(n=y[e].Player.split(" | "),n=n[1]),l.innerHTML+=`<option value="${t}">${n}</option>`,d.innerHTML+=`<option value="${t}">${n}</option>`}for(const n in w)w[`${e(w[n].field2)}`]=w[n],delete w[n];for(const n in $)$[`${e($[n].field2)}`]=$[n],delete $[n];for(const n in L)L[`${e(L[n].field2)}`]=L[n],delete L[n];for(const n in g)g[`${e(g[n].field2)}`]=g[n],delete g[n];delete w[""],delete $[""],delete L[""],delete g[""];for(const e in k){k[e].Sets={Lifetime:{},Seasonal:{}},k[e].Games={Lifetime:{},Seasonal:{}};let n=k[e].Player;for(const t in w)w[t].field2==n&&(k[e].Sets.Lifetime=w[t]);for(const t in $)$[t].field2==n&&(k[e].Games.Lifetime=$[t]);for(const t in L)L[t].field2==n&&(k[e].Sets.Seasonal=L[t]);for(const t in g)g[t].field2==n&&(k[e].Games.Seasonal=g[t])}i.forEach((e=>{e.addEventListener("change",(function(){let e=l.options[l.selectedIndex].innerText,n=l.options[l.selectedIndex].value,t=d.options[d.selectedIndex].innerText,s=d.options[d.selectedIndex].value;console.log(k);for(const n in k)k[n].Player==e&&(k[n].Characters,k[n].Lifetime.Sets,k[n].Lifetime.Games,k[n].Seasonal.Sets,k[n].Seasonal.Games);console.log("this is what I found:"),console.log(e,n,player_one_characters,player_one_lts,player_one_ltg,player_one_ss,player_one_sg),c.innerHTML=`\n                <article class="player-stats">\n                    <p>\n                        P1: ${e} (${player_one_characters})\n                        <br>\n                        PR #${n}\n                        <br>\n                        <br>\n                        Lifetime Stats\n                        <br>\n                        Lifetime Sets: ${player_one_lts}\n                        <br>\n                        Lifetime Games: ${player_one_ltg}\n                        <br>\n                        Seasonal Stats\n                        <br>\n                        <br>\n                        Seasonal Sets: ${player_one_ss}\n                        <br>\n                        Seasonal Games: ${player_one_sg}\n                    </p>\n                    <p>VS</p>\n                    <p>\n                        P1: ${t} (undefined)\n                        <br>\n                        PR #${s}\n                        <br>\n                        <br>\n                        Lifetime Stats\n                        <br>\n                        Lifetime Sets: undefined\n                        <br>\n                        Lifetime Games: undefined\n                        <br>\n                        Seasonal Stats\n                        <br>\n                        <br>\n                        Seasonal Sets: undefined\n                        <br>\n                        Seasonal Games: undefined\n                    </p>\n                </article>\n                `}))}))}catch(e){console.error(e.message)}}()})();